MERMAID_ACD

graph TD
    subgraph Início da Chamada
        A[Chamada de emergência em Linguagem Natural] --> B(Aguarda atendimento)
    end

    subgraph ChatBot
        C_wait(Espera chamada de emergência) --> C_init[Atendimento inicial]
        B --> C_init
        C_init --> C_classify_type[Identifica Tipo de Chamado]
        C_classify_type --> C_classify_complexity[Classifica Complexidade do Chamado]
        C_classify_complexity -- Chamado simples --> C_simple[Atende chamado simples]
    end

    subgraph Atendente Humano
        H_wait(Espera chamado de emergência) --> H_complex[Atende chamado complexo]
        C_classify_complexity -- Chamado complexo --> H_complex
    end

    C_simple --> Sys_in{Encaminha pro sistema}
    H_complex --> Sys_in

    %% << LIGAÇÕES DE LOOP >>
    %% Após encaminhar, ChatBot e Atendente voltam para a fila de espera
    Sys_in -.-> C_wait
    Sys_in -.-> H_wait

    subgraph Sistema e Bombeiros
        Sys_in --> F_receive[Recebe chamado]
        Sys_in --> S_wait_dispatch(Espera por despacho)

        F_wait(Espera por chamada de emergencia) --> F_receive

        S_wait_dispatch --> S_dispatch[Despacho da unidade pra atendimento]
        
        F_receive --> S_dispatch

        S_dispatch --> S_wait_confirm(Espera confirmação do envio de bombeiros)
        S_wait_confirm --> S_confirm[Recebe confirmação sobre o envio de equipe]
        
        S_confirm --> S_exit(Sai do sistema)

        F_receive --> F_ack[Reconhece despacho e registra que está a caminho]
        S_confirm --> F_ack
        F_ack --> F_local[Atendimento no local]
        F_local --> F_end[Finaliza atendimento do chamado]
    end
